import arcade

class Bullet:
    def __init__(self, x, y):
        self.sprite = arcade.Sprite("assets/bullet.png")
        self.sprite.center_x = x
        self.sprite.center_y = y

    def draw(self):
        self.sprite.draw()

    def update(self, dt):
        self.sprite.center_y += 4 * dt * 60
        if self.sprite.center_y > 520:
            self.sprite.center_y = -30

class Demo(arcade.Window):
    def __init__(self):
        super().__init__(640,480,"Arcade Game")
        arcade.set_background_color((0,0,0))
        self.spaceship = arcade.Sprite("assets/spaceship.png")
        self.bullet = Bullet(320,0)
        self.bullet2 = Bullet(380,140)

        self.vx = 0
        self.vy = 0
        self.playerx = 100
        self.playery = 240
        self.score = 0

    def on_draw(self):
        arcade.start_render()

        self.bullet.draw()
        self.bullet2.draw()
        self.spaceship.draw()

        arcade.draw_text("Score: " + str(self.score), 400, 400, (255,255,255), 40)

    def on_key_press(self, key, modifier):
        if key == arcade.key.UP:
            self.vy = 1
        if key == arcade.key.DOWN:
            self.vy = -1
        if key == arcade.key.LEFT:
            self.vx = -1
        if key == arcade.key.RIGHT:
            self.vx = 1

    def on_key_release(self, key, modifier):
        if key == arcade.key.UP:
            self.vy = 0
        if key == arcade.key.DOWN:
            self.vy = 0
        if key == arcade.key.LEFT:
            self.vx = 0
        if key == arcade.key.RIGHT:
            self.vx = 0

    def update(self, dt):

        self.bullet.update(dt)
        self.bullet2.update(dt)

        self.spaceship.center_x = self.playerx
        self.spaceship.center_y = self.playery
        self.spaceship.angle += 1

        self.playerx += self.vx*2
        self.playery += self.vy*2


        if self.playerx > 600:
            self.playerx = 100
            self.playery = 240
            self.score += 1


        collision1 = arcade.geometry.check_for_collision(self.bullet.sprite, self.spaceship)
        collision2 = arcade.geometry.check_for_collision(self.bullet2.sprite, self.spaceship)

        if collision1 or collision2:
            self.playerx = 100
            self.playery = 240
            self.score -= 2



window = Demo()
arcade.run()

